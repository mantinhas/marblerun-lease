// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: proto/Voting.proto

package emojivoto_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VotingResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shortcode string `protobuf:"bytes,1,opt,name=Shortcode,proto3" json:"Shortcode,omitempty"`
	Votes     int32  `protobuf:"varint,2,opt,name=Votes,proto3" json:"Votes,omitempty"`
}

func (x *VotingResult) Reset() {
	*x = VotingResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Voting_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VotingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VotingResult) ProtoMessage() {}

func (x *VotingResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Voting_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VotingResult.ProtoReflect.Descriptor instead.
func (*VotingResult) Descriptor() ([]byte, []int) {
	return file_proto_Voting_proto_rawDescGZIP(), []int{0}
}

func (x *VotingResult) GetShortcode() string {
	if x != nil {
		return x.Shortcode
	}
	return ""
}

func (x *VotingResult) GetVotes() int32 {
	if x != nil {
		return x.Votes
	}
	return 0
}

type VoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VoteRequest) Reset() {
	*x = VoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Voting_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteRequest) ProtoMessage() {}

func (x *VoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Voting_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteRequest.ProtoReflect.Descriptor instead.
func (*VoteRequest) Descriptor() ([]byte, []int) {
	return file_proto_Voting_proto_rawDescGZIP(), []int{1}
}

type VoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VoteResponse) Reset() {
	*x = VoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Voting_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteResponse) ProtoMessage() {}

func (x *VoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Voting_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteResponse.ProtoReflect.Descriptor instead.
func (*VoteResponse) Descriptor() ([]byte, []int) {
	return file_proto_Voting_proto_rawDescGZIP(), []int{2}
}

type ResultsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResultsRequest) Reset() {
	*x = ResultsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Voting_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultsRequest) ProtoMessage() {}

func (x *ResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Voting_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultsRequest.ProtoReflect.Descriptor instead.
func (*ResultsRequest) Descriptor() ([]byte, []int) {
	return file_proto_Voting_proto_rawDescGZIP(), []int{3}
}

type ResultsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*VotingResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ResultsResponse) Reset() {
	*x = ResultsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_Voting_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultsResponse) ProtoMessage() {}

func (x *ResultsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Voting_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultsResponse.ProtoReflect.Descriptor instead.
func (*ResultsResponse) Descriptor() ([]byte, []int) {
	return file_proto_Voting_proto_rawDescGZIP(), []int{4}
}

func (x *ResultsResponse) GetResults() []*VotingResult {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_proto_Voting_proto protoreflect.FileDescriptor

var file_proto_Voting_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x22, 0x42, 0x0a, 0x0c, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x32, 0xd8, 0x38, 0x0a, 0x0d, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x56, 0x6f, 0x74, 0x65, 0x50, 0x6f, 0x6f, 0x70, 0x12, 0x19,
	0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x56, 0x6f, 0x74, 0x65, 0x4a, 0x6f, 0x79,
	0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x56, 0x6f, 0x74, 0x65, 0x53,
	0x75, 0x6e, 0x67, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x0b, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x78, 0x65, 0x64, 0x12,
	0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f,
	0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x1c, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x74,
	0x75, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x54, 0x6f, 0x6e, 0x67, 0x75, 0x65, 0x57, 0x69, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x45, 0x79, 0x65, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x12, 0x56, 0x6f, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x4d, 0x6f, 0x75, 0x74, 0x68, 0x46,
	0x61, 0x63, 0x65, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x56, 0x6f,
	0x74, 0x65, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x65, 0x64, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x08, 0x56, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x19, 0x2e, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x56, 0x6f, 0x74, 0x65, 0x4e, 0x65, 0x72, 0x64, 0x46,
	0x61, 0x63, 0x65, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x56, 0x6f,
	0x74, 0x65, 0x47, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f,
	0x0a, 0x16, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x6c, 0x6c, 0x41, 0x6e, 0x64, 0x43, 0x72,
	0x6f, 0x73, 0x73, 0x62, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69,
	0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x10, 0x56, 0x6f, 0x74, 0x65, 0x48, 0x65, 0x61, 0x72, 0x74, 0x45, 0x79, 0x65, 0x73,
	0x43, 0x61, 0x74, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x56, 0x6f,
	0x74, 0x65, 0x48, 0x65, 0x61, 0x72, 0x4e, 0x6f, 0x45, 0x76, 0x69, 0x6c, 0x12, 0x19, 0x2e, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x65, 0x65, 0x4e, 0x6f,
	0x45, 0x76, 0x69, 0x6c, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x56,
	0x6f, 0x74, 0x65, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x4e, 0x6f, 0x45, 0x76, 0x69, 0x6c, 0x12, 0x19,
	0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x6f, 0x79,
	0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x56, 0x6f, 0x74, 0x65, 0x47,
	0x69, 0x72, 0x6c, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x56, 0x6f,
	0x74, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09,
	0x56, 0x6f, 0x74, 0x65, 0x57, 0x6f, 0x6d, 0x61, 0x6e, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x45, 0x0a, 0x0c, 0x56, 0x6f, 0x74, 0x65, 0x4f, 0x6c, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x6e,
	0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x56, 0x6f, 0x74, 0x65, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x6e, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69,
	0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x0d, 0x56, 0x6f, 0x74, 0x65, 0x47, 0x75, 0x61, 0x72, 0x64, 0x73, 0x6d, 0x61, 0x6e,
	0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x19, 0x56, 0x6f, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x4d, 0x61, 0x6e, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x56,
	0x6f, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x45, 0x0a, 0x0c, 0x56, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x56, 0x6f, 0x74, 0x65, 0x4d,
	0x61, 0x6e, 0x49, 0x6e, 0x54, 0x75, 0x78, 0x65, 0x64, 0x6f, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f,
	0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4a, 0x0a, 0x11, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x72, 0x69, 0x64, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x56, 0x65, 0x69, 0x6c, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x0c, 0x56, 0x6f, 0x74, 0x65, 0x4d, 0x72, 0x73, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x12, 0x19, 0x2e,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69,
	0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x61, 0x6e, 0x74,
	0x61, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x56, 0x6f, 0x74, 0x65,
	0x54, 0x75, 0x72, 0x6b, 0x65, 0x79, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x0a, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x61, 0x62, 0x62, 0x69, 0x74, 0x12, 0x19, 0x2e, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x56, 0x6f, 0x74, 0x65, 0x4e, 0x6f, 0x47, 0x6f, 0x6f, 0x64,
	0x57, 0x6f, 0x6d, 0x61, 0x6e, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b,
	0x56, 0x6f, 0x74, 0x65, 0x4f, 0x6b, 0x57, 0x6f, 0x6d, 0x61, 0x6e, 0x12, 0x19, 0x2e, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4d, 0x0a, 0x14, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x61, 0x69, 0x73, 0x69, 0x6e,
	0x67, 0x48, 0x61, 0x6e, 0x64, 0x57, 0x6f, 0x6d, 0x61, 0x6e, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f,
	0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x0d, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x4d,
	0x61, 0x6e, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x12, 0x56, 0x6f, 0x74,
	0x65, 0x4d, 0x61, 0x6e, 0x46, 0x61, 0x63, 0x65, 0x70, 0x61, 0x6c, 0x6d, 0x69, 0x6e, 0x67, 0x12,
	0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f,
	0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x12, 0x56, 0x6f, 0x74, 0x65, 0x57, 0x6f,
	0x6d, 0x61, 0x6e, 0x53, 0x68, 0x72, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x2e, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x10, 0x56, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x57, 0x6f, 0x6d, 0x61, 0x6e, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47,
	0x0a, 0x0e, 0x56, 0x6f, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6b, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x6e,
	0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x6e, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x0a, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x12, 0x19,
	0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x56, 0x6f, 0x74, 0x65, 0x4d, 0x61, 0x6e,
	0x44, 0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49,
	0x0a, 0x10, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x57, 0x6f, 0x6d,
	0x65, 0x6e, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x56, 0x6f, 0x74,
	0x65, 0x52, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x77, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69,
	0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x09, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x6b, 0x69, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x56, 0x6f, 0x74, 0x65, 0x47, 0x6f, 0x6c, 0x66, 0x69,
	0x6e, 0x67, 0x4d, 0x61, 0x6e, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e,
	0x56, 0x6f, 0x74, 0x65, 0x53, 0x75, 0x72, 0x66, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x6e, 0x12, 0x19,
	0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x11, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x62, 0x61, 0x6c, 0x6c, 0x4d, 0x61, 0x6e, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f,
	0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x0d, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x69, 0x6b, 0x69, 0x6e, 0x67, 0x4d,
	0x61, 0x6e, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x56, 0x6f, 0x74,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x70, 0x32, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x49, 0x0a, 0x10, 0x56, 0x6f, 0x74, 0x65, 0x56, 0x75, 0x6c, 0x63, 0x61, 0x6e, 0x53, 0x61,
	0x6c, 0x75, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x56,
	0x6f, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69,
	0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x0e, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x4d, 0x65, 0x48, 0x61, 0x6e,
	0x64, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x56, 0x6f, 0x74, 0x65,
	0x54, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x75, 0x70, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69,
	0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x41, 0x0a, 0x08, 0x56, 0x6f, 0x74, 0x65, 0x57, 0x61, 0x76, 0x65, 0x12, 0x19, 0x2e, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x70, 0x12, 0x19,
	0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x61, 0x69,
	0x73, 0x65, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69,
	0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x41, 0x0a, 0x08, 0x56, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x61, 0x79, 0x12, 0x19, 0x2e, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x6f, 0x67, 0x12, 0x19, 0x2e,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69,
	0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x61, 0x74, 0x32,
	0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x56, 0x6f, 0x74, 0x65, 0x50,
	0x69, 0x67, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x11, 0x56, 0x6f, 0x74,
	0x65, 0x48, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x69, 0x63, 0x6b, 0x12, 0x19,
	0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x6e, 0x61,
	0x69, 0x6c, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x56, 0x6f, 0x74,
	0x65, 0x42, 0x61, 0x63, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x09, 0x56, 0x6f, 0x74, 0x65, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f,
	0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x41, 0x0a, 0x08, 0x56, 0x6f, 0x74, 0x65, 0x54, 0x61, 0x63, 0x6f, 0x12, 0x19, 0x2e,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69,
	0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x75, 0x72, 0x72,
	0x69, 0x74, 0x6f, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x61, 0x6d, 0x65, 0x6e, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x0c, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x6f, 0x75, 0x67, 0x68, 0x6e, 0x75, 0x74, 0x12, 0x19,
	0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6d, 0x70, 0x61, 0x67, 0x6e, 0x65, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a,
	0x11, 0x56, 0x6f, 0x74, 0x65, 0x54, 0x72, 0x6f, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x72, 0x69,
	0x6e, 0x6b, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x56, 0x6f, 0x74,
	0x65, 0x42, 0x65, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x10,
	0x56, 0x6f, 0x74, 0x65, 0x54, 0x75, 0x6d, 0x62, 0x6c, 0x65, 0x72, 0x47, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x56, 0x6f, 0x74, 0x65, 0x57,
	0x6f, 0x72, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a,
	0x0a, 0x11, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x65, 0x61, 0x63, 0x68, 0x55, 0x6d, 0x62, 0x72, 0x65,
	0x6c, 0x6c, 0x61, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x10, 0x56, 0x6f,
	0x74, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x53, 0x6e, 0x6f, 0x77, 0x12, 0x19,
	0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x61, 0x6d,
	0x70, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x13, 0x56,
	0x6f, 0x74, 0x65, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x63, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x13, 0x56, 0x6f, 0x74,
	0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09,
	0x56, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x32, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x50, 0x0a, 0x17, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x75, 0x6e, 0x42, 0x65, 0x68, 0x69, 0x6e,
	0x64, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x19, 0x2e, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x11, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x57,
	0x69, 0x74, 0x68, 0x52, 0x61, 0x69, 0x6e, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x08, 0x56, 0x6f, 0x74, 0x65, 0x46, 0x69, 0x72, 0x65, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f,
	0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x49, 0x0a, 0x10, 0x56, 0x6f, 0x74, 0x65, 0x4a, 0x61, 0x63, 0x6b, 0x4f, 0x4c, 0x61,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b,
	0x56, 0x6f, 0x74, 0x65, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x56, 0x6f, 0x74, 0x65, 0x54, 0x61, 0x64, 0x61, 0x12, 0x19,
	0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x56, 0x6f, 0x74, 0x65, 0x54, 0x72, 0x6f,
	0x70, 0x68, 0x79, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x56, 0x6f,
	0x74, 0x65, 0x49, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69,
	0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x09, 0x56, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x67, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x56, 0x6f, 0x74, 0x65, 0x46, 0x61, 0x78, 0x12, 0x19,
	0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x75, 0x6c,
	0x62, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x12, 0x56, 0x6f, 0x74, 0x65,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x57, 0x69, 0x74, 0x68, 0x57, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x19,
	0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x72, 0x79,
	0x73, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x6c, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69,
	0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x45, 0x0a, 0x0c, 0x56, 0x6f, 0x74, 0x65, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12,
	0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f,
	0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x56, 0x6f, 0x74, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x72, 0x6f, 0x62, 0x61, 0x6e, 0x67, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x07, 0x56, 0x6f, 0x74, 0x65, 0x31, 0x30, 0x30, 0x12, 0x19, 0x2e, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x11, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x65, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a,
	0x0a, 0x11, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x65, 0x64, 0x53, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x12, 0x19, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x56, 0x6f,
	0x74, 0x65, 0x46, 0x6c, 0x6f, 0x70, 0x70, 0x79, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x19, 0x2e, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1c,
	0x2e, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2f, 0x5a, 0x2d, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x6c, 0x65,
	0x73, 0x73, 0x73, 0x79, 0x73, 0x2f, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x2f,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x76, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_Voting_proto_rawDescOnce sync.Once
	file_proto_Voting_proto_rawDescData = file_proto_Voting_proto_rawDesc
)

func file_proto_Voting_proto_rawDescGZIP() []byte {
	file_proto_Voting_proto_rawDescOnce.Do(func() {
		file_proto_Voting_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_Voting_proto_rawDescData)
	})
	return file_proto_Voting_proto_rawDescData
}

var file_proto_Voting_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_Voting_proto_goTypes = []interface{}{
	(*VotingResult)(nil),    // 0: emojivoto.v1.VotingResult
	(*VoteRequest)(nil),     // 1: emojivoto.v1.VoteRequest
	(*VoteResponse)(nil),    // 2: emojivoto.v1.VoteResponse
	(*ResultsRequest)(nil),  // 3: emojivoto.v1.ResultsRequest
	(*ResultsResponse)(nil), // 4: emojivoto.v1.ResultsResponse
}
var file_proto_Voting_proto_depIdxs = []int32{
	0,   // 0: emojivoto.v1.ResultsResponse.results:type_name -> emojivoto.v1.VotingResult
	1,   // 1: emojivoto.v1.VotingService.VotePoop:input_type -> emojivoto.v1.VoteRequest
	1,   // 2: emojivoto.v1.VotingService.VoteJoy:input_type -> emojivoto.v1.VoteRequest
	1,   // 3: emojivoto.v1.VotingService.VoteSunglasses:input_type -> emojivoto.v1.VoteRequest
	1,   // 4: emojivoto.v1.VotingService.VoteRelaxed:input_type -> emojivoto.v1.VoteRequest
	1,   // 5: emojivoto.v1.VotingService.VoteStuckOutTongueWinkingEye:input_type -> emojivoto.v1.VoteRequest
	1,   // 6: emojivoto.v1.VotingService.VoteMoneyMouthFace:input_type -> emojivoto.v1.VoteRequest
	1,   // 7: emojivoto.v1.VotingService.VoteFlushed:input_type -> emojivoto.v1.VoteRequest
	1,   // 8: emojivoto.v1.VotingService.VoteMask:input_type -> emojivoto.v1.VoteRequest
	1,   // 9: emojivoto.v1.VotingService.VoteNerdFace:input_type -> emojivoto.v1.VoteRequest
	1,   // 10: emojivoto.v1.VotingService.VoteGhost:input_type -> emojivoto.v1.VoteRequest
	1,   // 11: emojivoto.v1.VotingService.VoteSkullAndCrossbones:input_type -> emojivoto.v1.VoteRequest
	1,   // 12: emojivoto.v1.VotingService.VoteHeartEyesCat:input_type -> emojivoto.v1.VoteRequest
	1,   // 13: emojivoto.v1.VotingService.VoteHearNoEvil:input_type -> emojivoto.v1.VoteRequest
	1,   // 14: emojivoto.v1.VotingService.VoteSeeNoEvil:input_type -> emojivoto.v1.VoteRequest
	1,   // 15: emojivoto.v1.VotingService.VoteSpeakNoEvil:input_type -> emojivoto.v1.VoteRequest
	1,   // 16: emojivoto.v1.VotingService.VoteBoy:input_type -> emojivoto.v1.VoteRequest
	1,   // 17: emojivoto.v1.VotingService.VoteGirl:input_type -> emojivoto.v1.VoteRequest
	1,   // 18: emojivoto.v1.VotingService.VoteMan:input_type -> emojivoto.v1.VoteRequest
	1,   // 19: emojivoto.v1.VotingService.VoteWoman:input_type -> emojivoto.v1.VoteRequest
	1,   // 20: emojivoto.v1.VotingService.VoteOlderMan:input_type -> emojivoto.v1.VoteRequest
	1,   // 21: emojivoto.v1.VotingService.VotePoliceman:input_type -> emojivoto.v1.VoteRequest
	1,   // 22: emojivoto.v1.VotingService.VoteGuardsman:input_type -> emojivoto.v1.VoteRequest
	1,   // 23: emojivoto.v1.VotingService.VoteConstructionWorkerMan:input_type -> emojivoto.v1.VoteRequest
	1,   // 24: emojivoto.v1.VotingService.VotePrince:input_type -> emojivoto.v1.VoteRequest
	1,   // 25: emojivoto.v1.VotingService.VotePrincess:input_type -> emojivoto.v1.VoteRequest
	1,   // 26: emojivoto.v1.VotingService.VoteManInTuxedo:input_type -> emojivoto.v1.VoteRequest
	1,   // 27: emojivoto.v1.VotingService.VoteBrideWithVeil:input_type -> emojivoto.v1.VoteRequest
	1,   // 28: emojivoto.v1.VotingService.VoteMrsClaus:input_type -> emojivoto.v1.VoteRequest
	1,   // 29: emojivoto.v1.VotingService.VoteSanta:input_type -> emojivoto.v1.VoteRequest
	1,   // 30: emojivoto.v1.VotingService.VoteTurkey:input_type -> emojivoto.v1.VoteRequest
	1,   // 31: emojivoto.v1.VotingService.VoteRabbit:input_type -> emojivoto.v1.VoteRequest
	1,   // 32: emojivoto.v1.VotingService.VoteNoGoodWoman:input_type -> emojivoto.v1.VoteRequest
	1,   // 33: emojivoto.v1.VotingService.VoteOkWoman:input_type -> emojivoto.v1.VoteRequest
	1,   // 34: emojivoto.v1.VotingService.VoteRaisingHandWoman:input_type -> emojivoto.v1.VoteRequest
	1,   // 35: emojivoto.v1.VotingService.VoteBowingMan:input_type -> emojivoto.v1.VoteRequest
	1,   // 36: emojivoto.v1.VotingService.VoteManFacepalming:input_type -> emojivoto.v1.VoteRequest
	1,   // 37: emojivoto.v1.VotingService.VoteWomanShrugging:input_type -> emojivoto.v1.VoteRequest
	1,   // 38: emojivoto.v1.VotingService.VoteMassageWoman:input_type -> emojivoto.v1.VoteRequest
	1,   // 39: emojivoto.v1.VotingService.VoteWalkingMan:input_type -> emojivoto.v1.VoteRequest
	1,   // 40: emojivoto.v1.VotingService.VoteRunningMan:input_type -> emojivoto.v1.VoteRequest
	1,   // 41: emojivoto.v1.VotingService.VoteDancer:input_type -> emojivoto.v1.VoteRequest
	1,   // 42: emojivoto.v1.VotingService.VoteManDancing:input_type -> emojivoto.v1.VoteRequest
	1,   // 43: emojivoto.v1.VotingService.VoteDancingWomen:input_type -> emojivoto.v1.VoteRequest
	1,   // 44: emojivoto.v1.VotingService.VoteRainbow:input_type -> emojivoto.v1.VoteRequest
	1,   // 45: emojivoto.v1.VotingService.VoteSkier:input_type -> emojivoto.v1.VoteRequest
	1,   // 46: emojivoto.v1.VotingService.VoteGolfingMan:input_type -> emojivoto.v1.VoteRequest
	1,   // 47: emojivoto.v1.VotingService.VoteSurfingMan:input_type -> emojivoto.v1.VoteRequest
	1,   // 48: emojivoto.v1.VotingService.VoteBasketballMan:input_type -> emojivoto.v1.VoteRequest
	1,   // 49: emojivoto.v1.VotingService.VoteBikingMan:input_type -> emojivoto.v1.VoteRequest
	1,   // 50: emojivoto.v1.VotingService.VotePointUp2:input_type -> emojivoto.v1.VoteRequest
	1,   // 51: emojivoto.v1.VotingService.VoteVulcanSalute:input_type -> emojivoto.v1.VoteRequest
	1,   // 52: emojivoto.v1.VotingService.VoteMetal:input_type -> emojivoto.v1.VoteRequest
	1,   // 53: emojivoto.v1.VotingService.VoteCallMeHand:input_type -> emojivoto.v1.VoteRequest
	1,   // 54: emojivoto.v1.VotingService.VoteThumbsup:input_type -> emojivoto.v1.VoteRequest
	1,   // 55: emojivoto.v1.VotingService.VoteWave:input_type -> emojivoto.v1.VoteRequest
	1,   // 56: emojivoto.v1.VotingService.VoteClap:input_type -> emojivoto.v1.VoteRequest
	1,   // 57: emojivoto.v1.VotingService.VoteRaisedHands:input_type -> emojivoto.v1.VoteRequest
	1,   // 58: emojivoto.v1.VotingService.VotePray:input_type -> emojivoto.v1.VoteRequest
	1,   // 59: emojivoto.v1.VotingService.VoteDog:input_type -> emojivoto.v1.VoteRequest
	1,   // 60: emojivoto.v1.VotingService.VoteCat2:input_type -> emojivoto.v1.VoteRequest
	1,   // 61: emojivoto.v1.VotingService.VotePig:input_type -> emojivoto.v1.VoteRequest
	1,   // 62: emojivoto.v1.VotingService.VoteHatchingChick:input_type -> emojivoto.v1.VoteRequest
	1,   // 63: emojivoto.v1.VotingService.VoteSnail:input_type -> emojivoto.v1.VoteRequest
	1,   // 64: emojivoto.v1.VotingService.VoteBacon:input_type -> emojivoto.v1.VoteRequest
	1,   // 65: emojivoto.v1.VotingService.VotePizza:input_type -> emojivoto.v1.VoteRequest
	1,   // 66: emojivoto.v1.VotingService.VoteTaco:input_type -> emojivoto.v1.VoteRequest
	1,   // 67: emojivoto.v1.VotingService.VoteBurrito:input_type -> emojivoto.v1.VoteRequest
	1,   // 68: emojivoto.v1.VotingService.VoteRamen:input_type -> emojivoto.v1.VoteRequest
	1,   // 69: emojivoto.v1.VotingService.VoteDoughnut:input_type -> emojivoto.v1.VoteRequest
	1,   // 70: emojivoto.v1.VotingService.VoteChampagne:input_type -> emojivoto.v1.VoteRequest
	1,   // 71: emojivoto.v1.VotingService.VoteTropicalDrink:input_type -> emojivoto.v1.VoteRequest
	1,   // 72: emojivoto.v1.VotingService.VoteBeer:input_type -> emojivoto.v1.VoteRequest
	1,   // 73: emojivoto.v1.VotingService.VoteTumblerGlass:input_type -> emojivoto.v1.VoteRequest
	1,   // 74: emojivoto.v1.VotingService.VoteWorldMap:input_type -> emojivoto.v1.VoteRequest
	1,   // 75: emojivoto.v1.VotingService.VoteBeachUmbrella:input_type -> emojivoto.v1.VoteRequest
	1,   // 76: emojivoto.v1.VotingService.VoteMountainSnow:input_type -> emojivoto.v1.VoteRequest
	1,   // 77: emojivoto.v1.VotingService.VoteCamping:input_type -> emojivoto.v1.VoteRequest
	1,   // 78: emojivoto.v1.VotingService.VoteSteamLocomotive:input_type -> emojivoto.v1.VoteRequest
	1,   // 79: emojivoto.v1.VotingService.VoteFlightDeparture:input_type -> emojivoto.v1.VoteRequest
	1,   // 80: emojivoto.v1.VotingService.VoteRocket:input_type -> emojivoto.v1.VoteRequest
	1,   // 81: emojivoto.v1.VotingService.VoteStar2:input_type -> emojivoto.v1.VoteRequest
	1,   // 82: emojivoto.v1.VotingService.VoteSunBehindSmallCloud:input_type -> emojivoto.v1.VoteRequest
	1,   // 83: emojivoto.v1.VotingService.VoteCloudWithRain:input_type -> emojivoto.v1.VoteRequest
	1,   // 84: emojivoto.v1.VotingService.VoteFire:input_type -> emojivoto.v1.VoteRequest
	1,   // 85: emojivoto.v1.VotingService.VoteJackOLantern:input_type -> emojivoto.v1.VoteRequest
	1,   // 86: emojivoto.v1.VotingService.VoteBalloon:input_type -> emojivoto.v1.VoteRequest
	1,   // 87: emojivoto.v1.VotingService.VoteTada:input_type -> emojivoto.v1.VoteRequest
	1,   // 88: emojivoto.v1.VotingService.VoteTrophy:input_type -> emojivoto.v1.VoteRequest
	1,   // 89: emojivoto.v1.VotingService.VoteIphone:input_type -> emojivoto.v1.VoteRequest
	1,   // 90: emojivoto.v1.VotingService.VotePager:input_type -> emojivoto.v1.VoteRequest
	1,   // 91: emojivoto.v1.VotingService.VoteFax:input_type -> emojivoto.v1.VoteRequest
	1,   // 92: emojivoto.v1.VotingService.VoteBulb:input_type -> emojivoto.v1.VoteRequest
	1,   // 93: emojivoto.v1.VotingService.VoteMoneyWithWings:input_type -> emojivoto.v1.VoteRequest
	1,   // 94: emojivoto.v1.VotingService.VoteCrystalBall:input_type -> emojivoto.v1.VoteRequest
	1,   // 95: emojivoto.v1.VotingService.VoteUnderage:input_type -> emojivoto.v1.VoteRequest
	1,   // 96: emojivoto.v1.VotingService.VoteInterrobang:input_type -> emojivoto.v1.VoteRequest
	1,   // 97: emojivoto.v1.VotingService.Vote100:input_type -> emojivoto.v1.VoteRequest
	1,   // 98: emojivoto.v1.VotingService.VoteCheckeredFlag:input_type -> emojivoto.v1.VoteRequest
	1,   // 99: emojivoto.v1.VotingService.VoteCrossedSwords:input_type -> emojivoto.v1.VoteRequest
	1,   // 100: emojivoto.v1.VotingService.VoteFloppyDisk:input_type -> emojivoto.v1.VoteRequest
	3,   // 101: emojivoto.v1.VotingService.Results:input_type -> emojivoto.v1.ResultsRequest
	2,   // 102: emojivoto.v1.VotingService.VotePoop:output_type -> emojivoto.v1.VoteResponse
	2,   // 103: emojivoto.v1.VotingService.VoteJoy:output_type -> emojivoto.v1.VoteResponse
	2,   // 104: emojivoto.v1.VotingService.VoteSunglasses:output_type -> emojivoto.v1.VoteResponse
	2,   // 105: emojivoto.v1.VotingService.VoteRelaxed:output_type -> emojivoto.v1.VoteResponse
	2,   // 106: emojivoto.v1.VotingService.VoteStuckOutTongueWinkingEye:output_type -> emojivoto.v1.VoteResponse
	2,   // 107: emojivoto.v1.VotingService.VoteMoneyMouthFace:output_type -> emojivoto.v1.VoteResponse
	2,   // 108: emojivoto.v1.VotingService.VoteFlushed:output_type -> emojivoto.v1.VoteResponse
	2,   // 109: emojivoto.v1.VotingService.VoteMask:output_type -> emojivoto.v1.VoteResponse
	2,   // 110: emojivoto.v1.VotingService.VoteNerdFace:output_type -> emojivoto.v1.VoteResponse
	2,   // 111: emojivoto.v1.VotingService.VoteGhost:output_type -> emojivoto.v1.VoteResponse
	2,   // 112: emojivoto.v1.VotingService.VoteSkullAndCrossbones:output_type -> emojivoto.v1.VoteResponse
	2,   // 113: emojivoto.v1.VotingService.VoteHeartEyesCat:output_type -> emojivoto.v1.VoteResponse
	2,   // 114: emojivoto.v1.VotingService.VoteHearNoEvil:output_type -> emojivoto.v1.VoteResponse
	2,   // 115: emojivoto.v1.VotingService.VoteSeeNoEvil:output_type -> emojivoto.v1.VoteResponse
	2,   // 116: emojivoto.v1.VotingService.VoteSpeakNoEvil:output_type -> emojivoto.v1.VoteResponse
	2,   // 117: emojivoto.v1.VotingService.VoteBoy:output_type -> emojivoto.v1.VoteResponse
	2,   // 118: emojivoto.v1.VotingService.VoteGirl:output_type -> emojivoto.v1.VoteResponse
	2,   // 119: emojivoto.v1.VotingService.VoteMan:output_type -> emojivoto.v1.VoteResponse
	2,   // 120: emojivoto.v1.VotingService.VoteWoman:output_type -> emojivoto.v1.VoteResponse
	2,   // 121: emojivoto.v1.VotingService.VoteOlderMan:output_type -> emojivoto.v1.VoteResponse
	2,   // 122: emojivoto.v1.VotingService.VotePoliceman:output_type -> emojivoto.v1.VoteResponse
	2,   // 123: emojivoto.v1.VotingService.VoteGuardsman:output_type -> emojivoto.v1.VoteResponse
	2,   // 124: emojivoto.v1.VotingService.VoteConstructionWorkerMan:output_type -> emojivoto.v1.VoteResponse
	2,   // 125: emojivoto.v1.VotingService.VotePrince:output_type -> emojivoto.v1.VoteResponse
	2,   // 126: emojivoto.v1.VotingService.VotePrincess:output_type -> emojivoto.v1.VoteResponse
	2,   // 127: emojivoto.v1.VotingService.VoteManInTuxedo:output_type -> emojivoto.v1.VoteResponse
	2,   // 128: emojivoto.v1.VotingService.VoteBrideWithVeil:output_type -> emojivoto.v1.VoteResponse
	2,   // 129: emojivoto.v1.VotingService.VoteMrsClaus:output_type -> emojivoto.v1.VoteResponse
	2,   // 130: emojivoto.v1.VotingService.VoteSanta:output_type -> emojivoto.v1.VoteResponse
	2,   // 131: emojivoto.v1.VotingService.VoteTurkey:output_type -> emojivoto.v1.VoteResponse
	2,   // 132: emojivoto.v1.VotingService.VoteRabbit:output_type -> emojivoto.v1.VoteResponse
	2,   // 133: emojivoto.v1.VotingService.VoteNoGoodWoman:output_type -> emojivoto.v1.VoteResponse
	2,   // 134: emojivoto.v1.VotingService.VoteOkWoman:output_type -> emojivoto.v1.VoteResponse
	2,   // 135: emojivoto.v1.VotingService.VoteRaisingHandWoman:output_type -> emojivoto.v1.VoteResponse
	2,   // 136: emojivoto.v1.VotingService.VoteBowingMan:output_type -> emojivoto.v1.VoteResponse
	2,   // 137: emojivoto.v1.VotingService.VoteManFacepalming:output_type -> emojivoto.v1.VoteResponse
	2,   // 138: emojivoto.v1.VotingService.VoteWomanShrugging:output_type -> emojivoto.v1.VoteResponse
	2,   // 139: emojivoto.v1.VotingService.VoteMassageWoman:output_type -> emojivoto.v1.VoteResponse
	2,   // 140: emojivoto.v1.VotingService.VoteWalkingMan:output_type -> emojivoto.v1.VoteResponse
	2,   // 141: emojivoto.v1.VotingService.VoteRunningMan:output_type -> emojivoto.v1.VoteResponse
	2,   // 142: emojivoto.v1.VotingService.VoteDancer:output_type -> emojivoto.v1.VoteResponse
	2,   // 143: emojivoto.v1.VotingService.VoteManDancing:output_type -> emojivoto.v1.VoteResponse
	2,   // 144: emojivoto.v1.VotingService.VoteDancingWomen:output_type -> emojivoto.v1.VoteResponse
	2,   // 145: emojivoto.v1.VotingService.VoteRainbow:output_type -> emojivoto.v1.VoteResponse
	2,   // 146: emojivoto.v1.VotingService.VoteSkier:output_type -> emojivoto.v1.VoteResponse
	2,   // 147: emojivoto.v1.VotingService.VoteGolfingMan:output_type -> emojivoto.v1.VoteResponse
	2,   // 148: emojivoto.v1.VotingService.VoteSurfingMan:output_type -> emojivoto.v1.VoteResponse
	2,   // 149: emojivoto.v1.VotingService.VoteBasketballMan:output_type -> emojivoto.v1.VoteResponse
	2,   // 150: emojivoto.v1.VotingService.VoteBikingMan:output_type -> emojivoto.v1.VoteResponse
	2,   // 151: emojivoto.v1.VotingService.VotePointUp2:output_type -> emojivoto.v1.VoteResponse
	2,   // 152: emojivoto.v1.VotingService.VoteVulcanSalute:output_type -> emojivoto.v1.VoteResponse
	2,   // 153: emojivoto.v1.VotingService.VoteMetal:output_type -> emojivoto.v1.VoteResponse
	2,   // 154: emojivoto.v1.VotingService.VoteCallMeHand:output_type -> emojivoto.v1.VoteResponse
	2,   // 155: emojivoto.v1.VotingService.VoteThumbsup:output_type -> emojivoto.v1.VoteResponse
	2,   // 156: emojivoto.v1.VotingService.VoteWave:output_type -> emojivoto.v1.VoteResponse
	2,   // 157: emojivoto.v1.VotingService.VoteClap:output_type -> emojivoto.v1.VoteResponse
	2,   // 158: emojivoto.v1.VotingService.VoteRaisedHands:output_type -> emojivoto.v1.VoteResponse
	2,   // 159: emojivoto.v1.VotingService.VotePray:output_type -> emojivoto.v1.VoteResponse
	2,   // 160: emojivoto.v1.VotingService.VoteDog:output_type -> emojivoto.v1.VoteResponse
	2,   // 161: emojivoto.v1.VotingService.VoteCat2:output_type -> emojivoto.v1.VoteResponse
	2,   // 162: emojivoto.v1.VotingService.VotePig:output_type -> emojivoto.v1.VoteResponse
	2,   // 163: emojivoto.v1.VotingService.VoteHatchingChick:output_type -> emojivoto.v1.VoteResponse
	2,   // 164: emojivoto.v1.VotingService.VoteSnail:output_type -> emojivoto.v1.VoteResponse
	2,   // 165: emojivoto.v1.VotingService.VoteBacon:output_type -> emojivoto.v1.VoteResponse
	2,   // 166: emojivoto.v1.VotingService.VotePizza:output_type -> emojivoto.v1.VoteResponse
	2,   // 167: emojivoto.v1.VotingService.VoteTaco:output_type -> emojivoto.v1.VoteResponse
	2,   // 168: emojivoto.v1.VotingService.VoteBurrito:output_type -> emojivoto.v1.VoteResponse
	2,   // 169: emojivoto.v1.VotingService.VoteRamen:output_type -> emojivoto.v1.VoteResponse
	2,   // 170: emojivoto.v1.VotingService.VoteDoughnut:output_type -> emojivoto.v1.VoteResponse
	2,   // 171: emojivoto.v1.VotingService.VoteChampagne:output_type -> emojivoto.v1.VoteResponse
	2,   // 172: emojivoto.v1.VotingService.VoteTropicalDrink:output_type -> emojivoto.v1.VoteResponse
	2,   // 173: emojivoto.v1.VotingService.VoteBeer:output_type -> emojivoto.v1.VoteResponse
	2,   // 174: emojivoto.v1.VotingService.VoteTumblerGlass:output_type -> emojivoto.v1.VoteResponse
	2,   // 175: emojivoto.v1.VotingService.VoteWorldMap:output_type -> emojivoto.v1.VoteResponse
	2,   // 176: emojivoto.v1.VotingService.VoteBeachUmbrella:output_type -> emojivoto.v1.VoteResponse
	2,   // 177: emojivoto.v1.VotingService.VoteMountainSnow:output_type -> emojivoto.v1.VoteResponse
	2,   // 178: emojivoto.v1.VotingService.VoteCamping:output_type -> emojivoto.v1.VoteResponse
	2,   // 179: emojivoto.v1.VotingService.VoteSteamLocomotive:output_type -> emojivoto.v1.VoteResponse
	2,   // 180: emojivoto.v1.VotingService.VoteFlightDeparture:output_type -> emojivoto.v1.VoteResponse
	2,   // 181: emojivoto.v1.VotingService.VoteRocket:output_type -> emojivoto.v1.VoteResponse
	2,   // 182: emojivoto.v1.VotingService.VoteStar2:output_type -> emojivoto.v1.VoteResponse
	2,   // 183: emojivoto.v1.VotingService.VoteSunBehindSmallCloud:output_type -> emojivoto.v1.VoteResponse
	2,   // 184: emojivoto.v1.VotingService.VoteCloudWithRain:output_type -> emojivoto.v1.VoteResponse
	2,   // 185: emojivoto.v1.VotingService.VoteFire:output_type -> emojivoto.v1.VoteResponse
	2,   // 186: emojivoto.v1.VotingService.VoteJackOLantern:output_type -> emojivoto.v1.VoteResponse
	2,   // 187: emojivoto.v1.VotingService.VoteBalloon:output_type -> emojivoto.v1.VoteResponse
	2,   // 188: emojivoto.v1.VotingService.VoteTada:output_type -> emojivoto.v1.VoteResponse
	2,   // 189: emojivoto.v1.VotingService.VoteTrophy:output_type -> emojivoto.v1.VoteResponse
	2,   // 190: emojivoto.v1.VotingService.VoteIphone:output_type -> emojivoto.v1.VoteResponse
	2,   // 191: emojivoto.v1.VotingService.VotePager:output_type -> emojivoto.v1.VoteResponse
	2,   // 192: emojivoto.v1.VotingService.VoteFax:output_type -> emojivoto.v1.VoteResponse
	2,   // 193: emojivoto.v1.VotingService.VoteBulb:output_type -> emojivoto.v1.VoteResponse
	2,   // 194: emojivoto.v1.VotingService.VoteMoneyWithWings:output_type -> emojivoto.v1.VoteResponse
	2,   // 195: emojivoto.v1.VotingService.VoteCrystalBall:output_type -> emojivoto.v1.VoteResponse
	2,   // 196: emojivoto.v1.VotingService.VoteUnderage:output_type -> emojivoto.v1.VoteResponse
	2,   // 197: emojivoto.v1.VotingService.VoteInterrobang:output_type -> emojivoto.v1.VoteResponse
	2,   // 198: emojivoto.v1.VotingService.Vote100:output_type -> emojivoto.v1.VoteResponse
	2,   // 199: emojivoto.v1.VotingService.VoteCheckeredFlag:output_type -> emojivoto.v1.VoteResponse
	2,   // 200: emojivoto.v1.VotingService.VoteCrossedSwords:output_type -> emojivoto.v1.VoteResponse
	2,   // 201: emojivoto.v1.VotingService.VoteFloppyDisk:output_type -> emojivoto.v1.VoteResponse
	4,   // 202: emojivoto.v1.VotingService.Results:output_type -> emojivoto.v1.ResultsResponse
	102, // [102:203] is the sub-list for method output_type
	1,   // [1:102] is the sub-list for method input_type
	1,   // [1:1] is the sub-list for extension type_name
	1,   // [1:1] is the sub-list for extension extendee
	0,   // [0:1] is the sub-list for field type_name
}

func init() { file_proto_Voting_proto_init() }
func file_proto_Voting_proto_init() {
	if File_proto_Voting_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_Voting_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VotingResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Voting_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Voting_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Voting_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_Voting_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_Voting_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_Voting_proto_goTypes,
		DependencyIndexes: file_proto_Voting_proto_depIdxs,
		MessageInfos:      file_proto_Voting_proto_msgTypes,
	}.Build()
	File_proto_Voting_proto = out.File
	file_proto_Voting_proto_rawDesc = nil
	file_proto_Voting_proto_goTypes = nil
	file_proto_Voting_proto_depIdxs = nil
}
