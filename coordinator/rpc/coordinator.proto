syntax = "proto3";

package rpc;
option go_package = "github.com/edgelesssys/marblerun/coordinator/rpc";

service Marble {
  // Activate activates a marble in the mesh.
  rpc Activate (ActivationReq) returns (ActivationResp);

  rpc Ping (PingReq) returns (PingResp);
  rpc Deactivate (DeactivateReq) returns (DeactivateResp);
  rpc Lease(LeaseReq) returns (LeaseRenew);
}

message ActivationReq {
  // TODO: sending the quote via metadata/context would be cleaner.
  bytes Quote = 1;
  bytes CSR = 2;
  string MarbleType = 3;
  string UUID = 4;
}

message DeactivationSettings {
  string TrustProtocol = 1;
  oneof Settings {
    PingSettings PingSettings = 2;
    LeaseSettings LeaseSettings = 3;
  }
}

message PingSettings {
  string RequestInterval = 1;
  string RetryInterval = 2;
  int32 Retries = 3;
}

message LeaseSettings {
  string RequestInterval = 1;
  string RetryInterval = 2;
  int32 Retries = 3;
}

message ActivationResp {
  Parameters Parameters = 1;
  DeactivationSettings DeactivationSettings = 2;
}

message Parameters {
  map<string, bytes> Files = 1;
  map<string, bytes> Env = 2;
  repeated string Argv = 3;
}

message PingReq {
  string MarbleType = 1;
  string UUID = 2;
}

message PingResp {
  bool ok = 1;
}

message LeaseRenew {
  bool ok = 1;
  string leaseDuration = 2;
  // New feature?
  //bool renewContract = 5;
  //optional AppUsage usageLimit= 6;
}

message LeaseReq {
  string MarbleType = 1;
  string UUID = 2;
}

message DeactivateReq {
}

message DeactivateResp {
}

message AppUsage {
  float cpuTime = 1;
}